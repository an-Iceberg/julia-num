include("../src/derivative.jl")

using Format, Printf

println("--------------------- Differentiation (df) ---------------------")
println()

x = Float64(Ï€)
f(x) = exp(x)
d1f(x) = exp(x)
d2f(x) = exp(x)
d3f(x) = exp(x)
d4f(x) = exp(x)
d5f(x) = exp(x)
d6f(x) = exp(x)

@printf("d1_2: %.2e\n", abs(d1f(x) - d1_2(f, x)))
@printf("d1_4: %.2e\n", abs(d1f(x) - d1_4(f, x)))
@printf("d1_6: %.2e\n", abs(d1f(x) - d1_6(f, x)))
@printf("d1_8: %.2e\n", abs(d1f(x) - d1_8(f, x)))
println()
@printf("d2_2: %.2e\n", abs(d2f(x) - d2_2(f, x)))
@printf("d2_4: %.2e\n", abs(d2f(x) - d2_4(f, x)))
@printf("d2_6: %.2e\n", abs(d2f(x) - d2_6(f, x)))
@printf("d2_8: %.2e\n", abs(d2f(x) - d2_8(f, x)))
println()
@printf("d3_2: %.2e\n", abs(d3f(x) - d3_2(f, x)))
@printf("d3_4: %.2e\n", abs(d3f(x) - d3_4(f, x)))
@printf("d3_6: %.2e\n", abs(d3f(x) - d3_6(f, x)))
println()
@printf("d4_2: %.2e\n", abs(d4f(x) - d4_2(f, x, 0.01)))
@printf("d4_4: %.2e\n", abs(d4f(x) - d4_4(f, x, 0.01)))
@printf("d4_6: %.2e\n", abs(d4f(x) - d4_6(f, x, 0.01)))
println()
@printf("d5_2: %.2e\n", abs(d5f(x) - d5_2(f, x, 0.01)))
@printf("d5_4: %.2e\n", abs(d5f(x) - d5_4(f, x, 0.01)))
@printf("d5_6: %.2e\n", abs(d5f(x) - d5_6(f, x, 0.01)))
println()
@printf("d6_2: %.2e\n", abs(d6f(x) - d6_2(f, x, 1.0)))
@printf("d6_4: %.2e\n", abs(d6f(x) - d6_4(f, x, 1.0)))
@printf("d6_6: %.2e\n", abs(d6f(x) - d6_6(f, x, 0.1)))
println()

println()
@printf("%.2e\n", abs(d2f(x) - d1_4(x -> d1_4(f, x), x)))
@printf("%.2e\n", abs(d3f(x) - d1_4(x -> d1_4(x -> d1_4(f, x), x), x)))

println()
@printf("%.2e\n", abs(d2f(x) - d1_8(x -> d1_8(f, x), x)))
@printf("%.2e\n", abs(d3f(x) - d1_8(x -> d1_8(x -> d1_8(f, x), x), x)))
